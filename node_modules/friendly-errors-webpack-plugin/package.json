{
  "_args": [
    [
      {
        "raw": "friendly-errors-webpack-plugin@^1.6.1",
        "scope": null,
        "escapedName": "friendly-errors-webpack-plugin",
        "name": "friendly-errors-webpack-plugin",
        "rawSpec": "^1.6.1",
        "spec": ">=1.6.1 <2.0.0",
        "type": "range"
      },
      "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro"
    ]
  ],
  "_cnpm_publish_time": 1522933466415,
  "_from": "friendly-errors-webpack-plugin@^1.6.1",
  "_hasShrinkwrap": false,
  "_id": "friendly-errors-webpack-plugin@1.7.0",
  "_location": "/friendly-errors-webpack-plugin",
  "_nodeVersion": "9.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/friendly-errors-webpack-plugin_1.7.0_1522933466327_0.6787031842397673"
  },
  "_npmUser": {
    "name": "timneutkens",
    "email": "tim@timneutkens.nl"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "escape-string-regexp": "1.0.5",
    "has-ansi": "2.0.0",
    "strip-ansi": "3.0.1"
  },
  "_requested": {
    "raw": "friendly-errors-webpack-plugin@^1.6.1",
    "scope": null,
    "escapedName": "friendly-errors-webpack-plugin",
    "name": "friendly-errors-webpack-plugin",
    "rawSpec": "^1.6.1",
    "spec": ">=1.6.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://registry.npm.taobao.org/friendly-errors-webpack-plugin/download/friendly-errors-webpack-plugin-1.7.0.tgz",
  "_shasum": "efc86cbb816224565861a1be7a9d84d0aafea136",
  "_shrinkwrap": null,
  "_spec": "friendly-errors-webpack-plugin@^1.6.1",
  "_where": "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro",
  "author": {
    "name": "Geoffroy Warin"
  },
  "bugs": {
    "url": "https://github.com/geowarin/friendly-errors-webpack-plugin/issues"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "error-stack-parser": "^2.0.0",
    "string-width": "^2.0.0"
  },
  "description": "Recognizes certain classes of webpack errors and cleans, aggregates and prioritizes them to provide a better Developer Experience",
  "devDependencies": {
    "babel-core": "^6.23.1",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.3.0",
    "babel-plugin-transform-async-to-generator": "^6.22.0",
    "babel-preset-react": "^6.23.0",
    "eslint": "^3.16.1",
    "eslint-loader": "^1.6.1",
    "expect": "^1.20.2",
    "jest": "^18.1.0",
    "memory-fs": "^0.4.1",
    "webpack": "^2.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "efc86cbb816224565861a1be7a9d84d0aafea136",
    "size": 8750,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/friendly-errors-webpack-plugin/download/friendly-errors-webpack-plugin-1.7.0.tgz"
  },
  "files": [
    "src",
    "index.js"
  ],
  "gitHead": "f9b51b1f32401bcaddc20cc83cb1f282d4fcf11a",
  "homepage": "https://github.com/geowarin/friendly-errors-webpack-plugin#readme",
  "keywords": [
    "friendly",
    "errors",
    "webpack",
    "plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "geowarin",
      "email": "geowarin@gmail.com"
    },
    {
      "name": "timneutkens",
      "email": "tim@timneutkens.nl"
    }
  ],
  "name": "friendly-errors-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
  },
  "publish_time": 1522933466415,
  "readme": "# Friendly-errors-webpack-plugin\n\n[![npm](https://img.shields.io/npm/v/friendly-errors-webpack-plugin.svg)](https://www.npmjs.com/package/friendly-errors-webpack-plugin)\n[![Build Status](https://travis-ci.org/geowarin/friendly-errors-webpack-plugin.svg?branch=master)](https://travis-ci.org/geowarin/friendly-errors-webpack-plugin)\n[![Build status](https://ci.appveyor.com/api/projects/status/w6fovc9lttaqgx3k/branch/master?svg=true)](https://ci.appveyor.com/project/geowarin/friendly-errors-webpack-plugin/branch/master)\n\nFriendly-errors-webpack-plugin recognizes certain classes of webpack\nerrors and cleans, aggregates and prioritizes them to provide a better\nDeveloper Experience.\n\nIt is easy to add types of errors so if you would like to see more\nerrors get handled, please open a [PR](https://help.github.com/articles/creating-a-pull-request/)!\n\n## Getting started\n\n### Installation\n\n```bash\nnpm install friendly-errors-webpack-plugin --save-dev\n```\n\n### Basic usage\n\nSimply add `FriendlyErrorsWebpackPlugin` to the plugin section in your Webpack config.\n\n```javascript\nvar FriendlyErrorsWebpackPlugin = require('friendly-errors-webpack-plugin');\n\nvar webpackConfig = {\n  // ...\n  plugins: [\n    new FriendlyErrorsWebpackPlugin(),\n  ],\n  // ...\n}\n```\n\n### Turn off errors\n\nYou need to turn off all error logging by setting your webpack config quiet option to true.\n\n```javascript\napp.use(require('webpack-dev-middleware')(compiler, {\n  quiet: true,\n  publicPath: config.output.publicPath,\n}));\n```\n\nIf you use the webpack-dev-server, there is a setting in webpack's ```devServer``` options:\n\n```javascript\n// webpack config root\n{\n  // ...\n  devServer: {\n    // ...\n    quiet: true,\n    // ...\n  },\n  // ...\n}\n```\n\nIf you use webpack-hot-middleware, that is done by setting the log option to `false`. You can do something sort of like this, depending upon your setup:\n\n```javascript\napp.use(require('webpack-hot-middleware')(compiler, {\n  log: false\n}));\n```\n\n_Thanks to [webpack-dashboard](https://github.com/FormidableLabs/webpack-dashboard) for this piece of info._\n\n## Demo\n\n### Build success\n\n![success](http://i.imgur.com/MkUEhYz.gif)\n\n### eslint-loader errors\n\n![lint](http://i.imgur.com/xYRkldr.gif)\n\n### babel-loader syntax errors\n\n![babel](http://i.imgur.com/W59z8WF.gif)\n\n### Module not found\n\n![babel](http://i.imgur.com/OivW4As.gif)\n\n## Options\n\nYou can pass options to the plugin:\n\n```js\nnew FriendlyErrorsPlugin({\n  compilationSuccessInfo: {\n    messages: ['You application is running here http://localhost:3000'],\n    notes: ['Some additionnal notes to be displayed unpon successful compilation']\n  },\n  onErrors: function (severity, errors) {\n    // You can listen to errors transformed and prioritized by the plugin\n    // severity can be 'error' or 'warning'\n  },\n  // should the console be cleared between each compilation?\n  // default is true\n  clearConsole: true,\n\n  // add formatters and transformers (see below)\n  additionalFormatters: [],\n  additionalTransformers: []\n})\n```\n\n## Adding desktop notifications\n\nThe plugin has no native support for desktop notifications but it is easy\nto add them thanks to [node-notifier](https://www.npmjs.com/package/node-notifier) for instance.\n\n```js\nvar NotifierPlugin = require('friendly-errors-webpack-plugin');\nvar notifier = require('node-notifier');\nvar ICON = path.join(__dirname, 'icon.png');\n\nnew NotifierPlugin({\n    onErrors: (severity, errors) => {\n      if (severity !== 'error') {\n        return;\n      }\n      const error = errors[0];\n      notifier.notify({\n        title: \"Webpack error\",\n        message: severity + ': ' + error.name,\n        subtitle: error.file || '',\n        icon: ICON\n      });\n    }\n  })\n]\n```\n\n## API\n\n### Transformers and formatters\n\nWebpack's errors processing, is done in four phases:\n\n1. Extract relevant info from webpack errors. This is done by the plugin [here](https://github.com/geowarin/friendly-errors-webpack-plugin/blob/master/src/core/extractWebpackError.js)\n2. Apply transformers to all errors to identify and annotate well know errors and give them a priority\n3. Get only top priority error or top priority warnings if no errors are thrown\n4. Apply formatters to all annotated errors\n\nYou can add transformers and formatters. Please see [transformErrors](https://github.com/geowarin/friendly-errors-webpack-plugin/blob/master/src/core/transformErrors.js),\nand [formatErrors](https://github.com/geowarin/friendly-errors-webpack-plugin/blob/master/src/core/formatErrors.js)\nin the source code and take a look a the [default transformers](https://github.com/geowarin/friendly-errors-webpack-plugin/tree/master/src/transformers)\nand the [default formatters](https://github.com/geowarin/friendly-errors-webpack-plugin/tree/master/src/formatters).\n\n## TODO\n\n- [x] Make it compatible with node 4\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/geowarin/friendly-errors-webpack-plugin.git"
  },
  "scripts": {
    "test": "eslint --ignore-pattern test/* && jest"
  },
  "version": "1.7.0"
}
