{
  "_args": [
    [
      {
        "raw": "vue-style-loader@^3.0.3",
        "scope": null,
        "escapedName": "vue-style-loader",
        "name": "vue-style-loader",
        "rawSpec": "^3.0.3",
        "spec": ">=3.0.3 <4.0.0",
        "type": "range"
      },
      "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro"
    ]
  ],
  "_cnpm_publish_time": 1517373466743,
  "_from": "vue-style-loader@^3.0.3",
  "_hasShrinkwrap": false,
  "_id": "vue-style-loader@3.1.2",
  "_location": "/vue-style-loader",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-style-loader-3.1.2.tgz_1517373466673_0.7420071475207806"
  },
  "_npmUser": {
    "name": "yyx990803",
    "email": "yyx990803@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-style-loader@^3.0.3",
    "scope": null,
    "escapedName": "vue-style-loader",
    "name": "vue-style-loader",
    "rawSpec": "^3.0.3",
    "spec": ">=3.0.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "/vue-loader",
    "/weex-vue-loader"
  ],
  "_resolved": "http://registry.npm.taobao.org/vue-style-loader/download/vue-style-loader-3.1.2.tgz",
  "_shasum": "6b66ad34998fc9520c2f1e4d5fa4091641c1597a",
  "_shrinkwrap": null,
  "_spec": "vue-style-loader@^3.0.3",
  "_where": "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro",
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vuejs/vue-style-loader/issues"
  },
  "dependencies": {
    "hash-sum": "^1.0.2",
    "loader-utils": "^1.0.2"
  },
  "description": "Vue.js style loader module for webpack",
  "devDependencies": {
    "jest": "^18.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "6b66ad34998fc9520c2f1e4d5fa4091641c1597a",
    "size": 7494,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/vue-style-loader/download/vue-style-loader-3.1.2.tgz"
  },
  "gitHead": "d92e6125e4e6749fb9bdaee15e4feac65b91ffc2",
  "homepage": "https://github.com/vuejs/vue-style-loader#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    }
  ],
  "name": "vue-style-loader",
  "optionalDependencies": {},
  "publish_time": 1517373466743,
  "readme": "# vue-style-loader [![Build Status](https://circleci.com/gh/vuejs/vue-style-loader/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/vue-loader/tree/master) [![npm package](https://img.shields.io/npm/v/vue-style-loader.svg)](https://www.npmjs.com/package/vue-style-loader)\r\n\r\nThis is a fork based on [style-loader](https://github.com/webpack/style-loader). Similar to `style-loader`, you can chain it after `css-loader` to dynamically inject CSS into the document as style tags. However, since this is included as a dependency and used by default in `vue-loader`, in most cases you don't need to configure this loader yourself.\r\n\r\n## Options\r\n\r\n- **manualInject** (3.1.0+):\r\n\r\n  Type: `boolean`. When importing the style from a non-vue-file, by default the style is injected as a side effect of the import. When `manualInject` is true, the imported style object exposes a `__inject__` method, which can then be called manually at appropriate timing. If called on the server, the method expects one argument which is the `ssrContext` to attach styles to.\r\n\r\n  ``` js\r\n  import styles from 'styles.scss'\r\n\r\n  export default {\r\n    beforeCreate() { // or create a mixin for this purpose\r\n      if(styles.__inject__) {\r\n        styles.__inject__(this.$ssrContext)\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <div class={styles.heading}>Hello World</div>\r\n    }\r\n  }\r\n  ```\r\n\r\n  Note this behavior is enabled automatically when `vue-style-loader` is used on styles imported within a `*.vue` file. The option is only exposed for advanced usage.\r\n\r\n- **ssrId** (3.1.0+):\r\n\r\n  Type: `boolean`. Add `data-vue-ssr-id` attribute to injected `<style>` tags even when not in Node.js. This can be used with pre-rendering (instead of SSR) to avoid duplicate style injection on hydration.\r\n\r\n## Differences from `style-loader`\r\n\r\n### Server-Side Rendering Support\r\n\r\nWhen bundling with `target: 'node'`, the styles in all rendered components are collected and exposed on the Vue render context object as `context.styles`, which you can simply inline into your markup's `<head>`. If you are building a Vue SSR app, you probably should use this loader for CSS imported from JavaScript files too.\r\n\r\n### Misc\r\n\r\n- Does not support url mode and reference counting mode. Also removed `singleton` and `insertAt` query options. It always automatically pick the style insertion mechanism that makes most sense. If you need these capabilities you should probably use the original `style-loader` instead.\r\n\r\n- Fixed the issue that root-relative URLs are interpreted against chrome:// urls and make source map URLs work for injected `<style>` tags in Chrome.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/vuejs/vue-style-loader.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "3.1.2"
}
