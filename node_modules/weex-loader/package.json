{
  "_args": [
    [
      {
        "raw": "weex-loader@^0.7.2",
        "scope": null,
        "escapedName": "weex-loader",
        "name": "weex-loader",
        "rawSpec": "^0.7.2",
        "spec": ">=0.7.2 <0.8.0",
        "type": "range"
      },
      "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro"
    ]
  ],
  "_cnpm_publish_time": 1523594736259,
  "_from": "weex-loader@^0.7.2",
  "_hasShrinkwrap": false,
  "_id": "weex-loader@0.7.3",
  "_location": "/weex-loader",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/weex-loader_0.7.3_1523594736015_0.531307470291299"
  },
  "_npmUser": {
    "name": "balloonzzq",
    "email": "zqzhuang888@qq.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "big.js": "3.2.0",
    "commondir": "1.0.1",
    "emojis-list": "2.1.0",
    "json5": "0.5.1",
    "mkdirp": "0.5.1",
    "object-assign": "4.1.1",
    "pinkie-promise": "2.0.1"
  },
  "_requested": {
    "raw": "weex-loader@^0.7.2",
    "scope": null,
    "escapedName": "weex-loader",
    "name": "weex-loader",
    "rawSpec": "^0.7.2",
    "spec": ">=0.7.2 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://registry.npm.taobao.org/weex-loader/download/weex-loader-0.7.3.tgz",
  "_shasum": "f5acc463d180750af7ce510f943d7517f693e0af",
  "_shrinkwrap": null,
  "_spec": "weex-loader@^0.7.2",
  "_where": "/Users/huangwei/Documents/iOS Development/GitHub/Weex/weexPro",
  "author": {
    "name": "terrykingcha",
    "email": "terrykingcha@gmail.com"
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/weexteam/weex-loader/issues"
  },
  "dependencies": {
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-runtime": "^6.9.2",
    "hash-sum": "^1.0.2",
    "loader-utils": "^1.1.0",
    "md5": "^2.1.0",
    "parse5": "^2.1.5",
    "source-map": "^0.5.6",
    "weex-scripter": "^0.1.5",
    "weex-styler": "^0.3.1",
    "weex-templater": "^0.3.5",
    "weex-transformer": "^0.4.5",
    "weex-vue-loader": "^0.6.1"
  },
  "description": "a webpack loader for weex",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-core": "^6.10.4",
    "chai": "^3.5.0",
    "coffee-loader": "^0.7.2",
    "coffee-script": "^1.10.0",
    "eslint": "^2.13.1",
    "gazeer": "^0.1.1",
    "jade": "^1.11.0",
    "jade-html-loader": "0.0.3",
    "js-base64": "^2.1.9",
    "mocha": "^2.4.5",
    "postcss-cssnext": "^2.7.0",
    "postcss-loader": "^0.9.1",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0",
    "webpack": "~1.13.0",
    "weex-components": "^0.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f5acc463d180750af7ce510f943d7517f693e0af",
    "size": 10760,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/weex-loader/download/weex-loader-0.7.3.tgz"
  },
  "gitHead": "b7d8411ead8d7e6568b11fea8eeb19fde7720aa0",
  "homepage": "https://github.com/weexteam/weex-loader#readme",
  "keywords": [
    "weex",
    "loader",
    "webpack",
    "transformer"
  ],
  "licenses": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "balloonzzq",
      "email": "zqzhuang888@qq.com"
    },
    {
      "name": "erha19",
      "email": "faterrole@gmail.com"
    },
    {
      "name": "fkysly",
      "email": "fkysly@gmail.com"
    },
    {
      "name": "hanks",
      "email": "zhanghan.me@gmail.com"
    },
    {
      "name": "jinjiang",
      "email": "zhaojinjiang@me.com"
    },
    {
      "name": "lvscar",
      "email": "lvscar@gmail.com"
    },
    {
      "name": "songsiqi",
      "email": "songsiqi2006@126.com"
    },
    {
      "name": "terrykingcha",
      "email": "terrykingcha@gmail.com"
    }
  ],
  "name": "weex-loader",
  "optionalDependencies": {},
  "publish_time": 1523594736259,
  "readme": "# Weex Loader\n\nA webpack loader for Weex.\n\n## Install\n\n```\nnpm install weex-loader babel-loader --save\n```\n\n## Features\n\n0. Can load `.we` file.\n0. Can load parted files(`.js/.css/.html`) via `src` attribute.\n0. Can specify a custom language to chain any loader.\n0. Can specify name when require `.we` file.\n0. Can write es2015 in script.\n\n## Upgrade to v0.3\n\n- Use a different way to load parted files. The old way is deprecated.\n- If you dependent `weex-components` under v0.1, please update it to v0.2.\n- Just enjoy the new features!\n- Use some hack way to require `@weex-module/xxxx` in `.js` file. see [issue](https://github.com/weexteam/weex-loader/issues/18#issuecomment-245204349)\n\n## Usage\n\n### How to load a `.we` file.\n\n**make a webpack config**\n```javascript\nmodule.exports = {\n  entry: './main.we?entry',\n  output: {\n    path: './dist',\n    filename: 'main.js'\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.we(\\?[^?]+)?$/,\n        loader: 'weex'\n      }\n    ]\n  }\n};\n```\n\n### How to write parted files\n\n**specify `src` attribute**\n```html\n<template src=\"./main.html\"></template>\n<style src=\"./main.css\"></style>\n<script src=\"./main.js\"></script>\n```\n\n### add some custom language for loaders\n\n**append a weex config in webpack config**\n```javascript\n  weex: {\n    lang: {\n      jade: ['jade-html'] // a jade langauge will chain \"jade-html-loader\"\n    }\n  }\n```\n\n**main.we**\n```\n<template lang=\"jade\">\ndiv\n  text Hello Weex\n</template>\n```\n\n### How to require `.we` file as component element\n\n0. first, require a `path/to/component.we` in `script` like `require('./foo.we')` or write inline element like `<element name=\"foo\" src=\"./foo.we\"></element>`.\n1. second, use it in `template` like `<foo></foo>`.\n\n```\n<element name=\"foo\" src=\"./foo.we\"></element>\n\n<template>\n  <div>\n    <foo></foo>\n    <bar></bar>\n  </div>\n</template>\n\n<script>\n  require('./bar.we')\n</script>\n```\n\n### How to specify the name of a component\n\n0. By default, the name is the basename without extname of component path.\n1. Give a name query in require request, like `require('./foo.we?name=\"fooo\"')`. Or specify a name attribute in element, like `<element name=\"fooo\" src=\"./foo.we\" ></element>`\n2. use the name in `template` like `<fooo></fooo>`.\n\n```\n<element name=\"fooo\" src=\"./foo.we\"></element>\n\n<template>\n  <div>\n    <fooo></fooo>\n    <baar></baar>\n  </div>\n</template>\n\n<script>\n  require('./bar.we?name=baar')\n</script>\n```\n\n## Test\n\n```bash\nnpm run test\n```\nwill run mocha testing.\n\nAnd you can check the specs in `test/spec` folder.\n\n## Specs\n\n- [Build with single template tag](test/spec/a.we)\n- [Build with template and style tags](test/spec/b.we)\n- [Build with template/style/script tags](test/spec/c.we)\n- [Build with single element tag](test/spec/d.we)\n- [Build with multiple element tag](test/spec/e.we)\n- [Build from parted files specifed in `src` attr](test/spec/f.we)\n- [Manually Require component and specifies an alias name](test/spec/g.we)\n- [Automaticely require component under some folder](test/spec/h.we)\n- [Build with config/data tag](test/spec/i.we)\n- [Require weex module](test/spec/j.we)\n- [Build by using custom language](test/spec/k.we)\n- [Require commonjs module](test/spec/l.we)\n- [Require weex module in commonjs module](test/spec/m.we)\n- [Build with sourcemap(no test)](test/spec/n.we)\n- [Build weex examples](test/spec/o.we)\n\n## Knew Issues\n\n- [`Bug` Source Map Offset](https://github.com/webpack/webpack/issues/2145). Encoding to this problem, please use `devtool:\"eval-source-map\"` instead of `devtool:\"source-map\"`.\n- [`Bug` Can't set debugger breakpoint](#). I still don't know the reason, but you can debug with `debugger` keyword.\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/weexteam/weex-loader.git"
  },
  "scripts": {
    "build": "node_modules/babel-cli/bin/babel.js src --out-dir lib",
    "ci": "npm run test",
    "clear": "rm -f lib/* && rm -f test/actual/*",
    "dev": "gazeer -p \"src/*.js\" -c \"npm run build\"",
    "lint": "eslint --fix src",
    "prepublish": "npm run clear && npm run lint && npm run build",
    "pretest": "npm run clear && npm run lint && npm run build",
    "test": "npm run test:build",
    "test:build": "webpack --config test/webpack.config.js",
    "test:mocha": "mocha test/test.js"
  },
  "version": "0.7.3"
}
